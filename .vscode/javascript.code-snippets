{
	// Place your code-snippet 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"React Functional Component": {
		"prefix": "rfunc",
		"body": [
			"import React from 'react'",
			"import PropTypes from 'prop-types'\n\n",
			"const ${1:CName} = (props) => {",
			"\treturn (",
			"\t\t<div className=\"$1\">",
			"\t\t</div>",
			"\t)",
			"}\n\n",
			"$1.propTypes = {",
			"\t$2",
			"}\n\n",
			"export default $1"
		],
		"description": "Create React Functional Component"
	},
	"React Functional Component Receive data from props": {
		"prefix": "rfunc",
		"body": [
			"import React, { useState, useEffect } from 'react'",
			"import PropTypes from 'prop-types'\n\n",
			"const ${1:CName} = ({ ${2:data}: _$2 }) => {\n",
			"\tconst [$2, set${2:/capitalize}] = useState(() => _$2)\n",
			"\tuseEffect(() => {",
			"\t\tset${2:/capitalize}(_$2)",
			"\t}, [_$2])\n",
			"\treturn (",
			"\t\t<div className=\"$1\">",
			"\t\t</div>",
			"\t)",
			"}\n\n",
			"$1.propTypes = {",
			"$3",
			"}\n\n",
			"export default $1"
		],
		"description": "React Functional Component Receive data from props"
	}
}